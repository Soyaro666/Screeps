var roleCollection = require('roleCollection');
var taskRespawn = require('task.respawn');

module.exports.loop = function () {
	
	for(var name in Game.rooms) {
        console.log('Room "'+name+'" has '+Game.rooms[name].energyAvailable+' of '+Game.rooms[name].energyCapacityAvailable+' energy');
		
		//gathering existing Creeps
		var localCreeps = Game.rooms[name].find(FIND_MY_CREEPS);
		var attackers = _.filter(localCreeps, (creep) => creep.memory.role == 'attacker');
		var upgraders = _.filter(localCreeps, (creep) => creep.memory.role == 'upgrader');
		var chargers = _.filter(localCreeps, (creep) => creep.memory.role == 'charger');
		var builders = _.filter(localCreeps, (creep) => creep.memory.role == 'builder');
		var localSpawns = Game.rooms[name].find(FIND_MY_SPAWNS);
		var spawn = localSpawns[0].name;
		
		var roomLevel = Game.rooms[name].controller.level
		var maxAttackers = roomLevel * 2;
		for(var builds in Game.rooms[name].structures) {
			/*var maxAttackers = Game.structures[builds].room.find(FIND_MY_STRUCTURES, {
				filter: (structure) => {
					return (structure.structureType == STRUCTURE_EXTENSION ||
							structure.structureType == STRUCTURE_SPAWN ||
							structure.structureType == STRUCTURE_TOWER);
				}
			}).length;*/
			if(Game.structures[name].structureType == STRUCTURE_TOWER) {
				var tower = Game.structures[name];
			}
			if(tower) {
				var closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);
				var closestDamagedStructure = tower.pos.findClosestByRange(FIND_MY_STRUCTURES, {
					filter: (structure) => structure.hits < structure.hitsMax
				});
				if(closestHostile) {
					tower.attack(closestHostile);
				} else if(closestDamagedStructure) {
					tower.repair(closestDamagedStructure);
				}
				var tower = false;
			}
		}
		console.log('Attackers: '+attackers.length+', Chargers: '+chargers.length+', Upgraders: '+upgraders.length+', Builders: '+builders.length);
		
		var newTask = false
		if(chargers.length < roomLevel-attackers.length) {
			var newName = 'charger' + Game.time;
			var spawning = Game.spawns[spawn].spawnCreep([WORK,CARRY,MOVE], newName, {memory: {role: 'charger'}});
		} else if(upgraders.length < roomLevel-attackers.length) {
			var newName = 'upgrader' + Game.time;
			var spawning = Game.spawns[spawn].spawnCreep([WORK,CARRY,MOVE], newName, {memory: {role: 'upgrader'}});
		} else if(builders.length < 1) {
			var newName = 'builder' + Game.time;
			var spawning = Game.spawns[spawn].spawnCreep([WORK,CARRY,MOVE], newName, {memory: {role: 'builder'}});
		} else if(attackers.length < maxAttackers) {
			newTask = 'attacker';
		}
		
		if(newTask) {
			taskRespawn.run(newTask, spawn, Game.rooms[name].energyCapacityAvailable);
		}
		
		if(Game.spawns[spawn].spawning) { 
			var spawningCreep = Game.creeps[Game.spawns[spawn].spawning.name];
			Game.spawns[spawn].room.visual.text(
				'🛠️' + spawningCreep.memory.role,
				Game.spawns[spawn].pos.x + 1, 
				Game.spawns[spawn].pos.y, 
				{align: 'left', opacity: 0.8});
		}
		
		
		var extenders = Game.rooms[name].find(FIND_MY_STRUCTURES, {
			filter: (structure) => {
				return (structure.structureType == STRUCTURE_EXTENSION);
			}
		});
		var towers = Game.rooms[name].find(FIND_MY_STRUCTURES, {
			filter: (structure) => {
				return (structure.structureType == STRUCTURE_TOWER);
			}
		});
		
		var rng1 = Math.random() * 10 - 5;
		var rng2 = Math.random() * 10 - 5;
		
		if(roomLevel == 1) {
			if(spawn) {
				var sources = Game.spawns[spawn].room.find(FIND_SOURCES);
				for(var dest in sources) {
					var newStreet = Game.spawns[spawn].pos.findPathTo(sources[dest], {ignoreCreeps:true, ignoreRoads:true});
					for(var road in newStreet) {
						if(road < newStreet.length - 1) {
							Game.spawns[spawn].room.createConstructionSite(newStreet[road].x, newStreet[road].y, STRUCTURE_ROAD)
						}
					}
					
				}
			}
		}
		if(roomLevel == 2 && extenders.length < 5) {
			if(Game.spawns[spawn].room.createConstructionSite(Game.spawns[spawn].pos.x+rng1, Game.spawns[spawn].pos.y+rng2, STRUCTURE_EXTENSION) == 0) {
				console.log('new Extension');
			}
		}
		if(roomLevel == 3 && towers.length < 1) {
			var rng1 = rng1 / 2;
			var rng2 = rng2 / 2;
			if(Game.spawns[spawn].room.createConstructionSite(Game.spawns[spawn].pos.x+rng1, Game.spawns[spawn].pos.y+rng2, STRUCTURE_TOWER) == 0) {
				console.log('new Tower');
			}
		}//*/
	}

    for(var name in Game.creeps) {
        var creep = Game.creeps[name];
		roleCollection.run(creep);
    }
}